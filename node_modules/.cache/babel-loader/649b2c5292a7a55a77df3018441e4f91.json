{"ast":null,"code":"var _jsxFileName = \"/Users/elhamjafari/Desktop/CICCCProjects/m2NewTeacher/react/weatherforecast/weatherforecast/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Forecast from \"./components/Forecast/Forecast\";\nimport { ThemeContext, Theme } from './contexts/context';\nimport { useContext, useState } from \"react\";\nimport Home from './components/Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const theme = useContext(ThemeContext);\n  const [appTheme, setTheme] = useState(theme.dark);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: appTheme,\n    children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"h37HMSO5wqd/ieY2G4P6ilB81Cs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/elhamjafari/Desktop/CICCCProjects/m2NewTeacher/react/weatherforecast/weatherforecast/src/App.js"],"names":["Forecast","ThemeContext","Theme","useContext","useState","Home","App","theme","appTheme","setTheme","dark"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,QAAP,MAAqB,gCAArB;AACA,SAASC,YAAT,EAAuBC,KAAvB,QAAoC,oBAApC;AACA,SAAQC,UAAR,EAAoBC,QAApB,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACT,QAAMC,KAAK,GAAEJ,UAAU,CAACF,YAAD,CAAvB;AACF,QAAM,CAACO,QAAD,EAAUC,QAAV,IAAoBL,QAAQ,CAACG,KAAK,CAACG,IAAP,CAAlC;AACF,sBAEE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEF,QAA9B;AAAA,2BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFF;AAOD;;GAVQF,G;;KAAAA,G;AAYT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Forecast from \"./components/Forecast/Forecast\";\nimport { ThemeContext, Theme } from './contexts/context';\nimport {useContext, useState} from \"react\";\nimport Home from './components/Home';\n\nfunction App() {\n      const theme= useContext(ThemeContext);\n    const [appTheme,setTheme]=useState(theme.dark)\n  return (\n    \n    <ThemeContext.Provider value={appTheme}>\n      <Home/>\n    </ThemeContext.Provider>\n      \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}