{"ast":null,"code":"import _slicedToArray from\"/Users/elhamjafari/Desktop/CICCCProjects/m2NewTeacher/react/weatherforecast/weatherforecast/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useContext,useState}from'react';import{ThemeContext}from'../../contexts/context';import Conditions from'../Conditions/Conditions';import classes from'./Forecast.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Forecast=function Forecast(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),city=_useState2[0],setCity=_useState2[1];var _useState3=useState('imperial'),_useState4=_slicedToArray(_useState3,2),unit=_useState4[0],setUnit=_useState4[1];var uriEncodedCity=encodeURIComponent(city);var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),responseObj=_useState6[0],setResponseObj=_useState6[1];var Theme=useContext(ThemeContext);function getForecast(e){e.preventDefault();fetch(\"https://api.openweathermap.org/data/2.5/weather?units=\".concat(unit,\"&q=\").concat(uriEncodedCity,\"&appid=b616e8f9b0f5ea6e4561ed1d32ac9fc8\")).then(function(response){return response.json();}).then(function(response){setResponseObj(response);});}return/*#__PURE__*/_jsxs(\"div\",{style:Theme,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Find Current Weather Conditions\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:getForecast,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter City\",maxLength:\"50\",className:classes.TextInput,value:city,onChange:function onChange(e){return setCity(e.target.value);}}),/*#__PURE__*/_jsxs(\"label\",{className:classes.Radio,children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"units\",checked:unit===\"imperial\",value:\"imperial\",onChange:function onChange(e){return setUnit(e.target.value);}}),\"Fahrenheit\"]}),/*#__PURE__*/_jsxs(\"label\",{className:classes.Radio,children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"units\",checked:unit===\"metric\",value:\"metric\",onChange:function onChange(e){return setUnit(e.target.value);}}),\"Celcius\"]}),/*#__PURE__*/_jsx(\"button\",{className:classes.Button,type:\"submit\",children:\"Get Forecast\"})]}),/*#__PURE__*/_jsx(Conditions,{responseObj:responseObj})]});};export default Forecast;// const [lat, setLat] = useState([]);\n//     const [long, setLong] = useState([]);\n//     const [data, setData] = useState([]);\n//     useEffect(() => {\n//         const fetchData =  () => {\n//           navigator.geolocation.getCurrentPosition(function(position) {\n//             setLat(position.coords.latitude);\n//             setLong(position.coords.longitude);\n//           });\n//             fetch(`https://api.openweathermap.org/data/2.5/weather/?lat=${lat}&lon=${long}&units=${unit}&appid=b616e8f9b0f5ea6e4561ed1d32ac9fc8`)\n//             .then(res => res.json())\n//             .then(result => {\n//                 setData(result)\n//             });\n//             }\n//             fetchData();\n//         }, [lat,long])","map":{"version":3,"sources":["/Users/elhamjafari/Desktop/CICCCProjects/m2NewTeacher/react/weatherforecast/weatherforecast/src/components/Forecast/Forecast.js"],"names":["React","useContext","useState","ThemeContext","Conditions","classes","Forecast","city","setCity","unit","setUnit","uriEncodedCity","encodeURIComponent","responseObj","setResponseObj","Theme","getForecast","e","preventDefault","fetch","then","response","json","TextInput","target","value","Radio","Button"],"mappings":"iLAAA,MAAOA,CAAAA,KAAP,EAAeC,UAAf,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,YAAT,KAA6B,wBAA7B,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,C,wFAIA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CAEnB,cAAsBJ,QAAQ,CAAC,EAAD,CAA9B,wCAAKK,IAAL,eAAWC,OAAX,eACA,eAAsBN,QAAQ,CAAC,UAAD,CAA9B,yCAAKO,IAAL,eAAWC,OAAX,eACA,GAAMC,CAAAA,cAAc,CAAGC,kBAAkB,CAACL,IAAD,CAAzC,CACA,eAAoCL,QAAQ,CAAC,EAAD,CAA5C,yCAAKW,WAAL,eAAkBC,cAAlB,eACA,GAAMC,CAAAA,KAAK,CAAEd,UAAU,CAACE,YAAD,CAAvB,CAGA,QAASa,CAAAA,WAAT,CAAqBC,CAArB,CAAwB,CACpBA,CAAC,CAACC,cAAF,GACDC,KAAK,iEAA0DV,IAA1D,eAAoEE,cAApE,4CAAL,CACCS,IADD,CACM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADd,EAECF,IAFD,CAEM,SAAAC,QAAQ,CAAI,CACdP,cAAc,CAACO,QAAD,CAAd,CACH,CAJD,EAKH,CAED,mBACI,aAAK,KAAK,CAAEN,KAAZ,wBACI,uDADJ,cAEK,cAAM,QAAQ,CAAEC,WAAhB,wBACI,cACI,IAAI,CAAC,MADT,CAEI,WAAW,CAAC,YAFhB,CAGI,SAAS,CAAC,IAHd,CAII,SAAS,CAAEX,OAAO,CAACkB,SAJvB,CAKI,KAAK,CAAEhB,IALX,CAMI,QAAQ,CAAE,kBAACU,CAAD,QAAOT,CAAAA,OAAO,CAACS,CAAC,CAACO,MAAF,CAASC,KAAV,CAAd,EANd,EADJ,cASI,eAAO,SAAS,CAAEpB,OAAO,CAACqB,KAA1B,wBACI,cACI,IAAI,CAAC,OADT,CAEI,IAAI,CAAC,OAFT,CAGI,OAAO,CAAEjB,IAAI,GAAK,UAHtB,CAII,KAAK,CAAC,UAJV,CAKI,QAAQ,CAAE,kBAACQ,CAAD,QAAOP,CAAAA,OAAO,CAACO,CAAC,CAACO,MAAF,CAASC,KAAV,CAAd,EALd,EADJ,gBATJ,cAmBI,eAAO,SAAS,CAAEpB,OAAO,CAACqB,KAA1B,wBACI,cACI,IAAI,CAAC,OADT,CAEI,IAAI,CAAC,OAFT,CAGI,OAAO,CAAEjB,IAAI,GAAK,QAHtB,CAII,KAAK,CAAC,QAJV,CAMI,QAAQ,CAAE,kBAACQ,CAAD,QAAOP,CAAAA,OAAO,CAACO,CAAC,CAACO,MAAF,CAASC,KAAV,CAAd,EANd,EADJ,aAnBJ,cA+BI,eAAQ,SAAS,CAAEpB,OAAO,CAACsB,MAA3B,CAAmC,IAAI,CAAC,QAAxC,0BA/BJ,GAFL,cAqCI,KAAC,UAAD,EACI,WAAW,CAAEd,WADjB,EArCJ,GADJ,CA2CF,CA7DD,CA+DA,cAAeP,CAAAA,QAAf,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useContext, useState } from 'react';\nimport { ThemeContext } from '../../contexts/context';\nimport Conditions from '../Conditions/Conditions';\nimport classes from './Forecast.module.css';\n\n\n\nconst Forecast = () => {\n\n    let [city, setCity] = useState('');\n    let [unit, setUnit] = useState('imperial');\n    const uriEncodedCity = encodeURIComponent(city);\n    let [responseObj, setResponseObj] = useState({});\n    const Theme= useContext(ThemeContext);\n\n\n    function getForecast(e) {\n        e.preventDefault();\n       fetch(`https://api.openweathermap.org/data/2.5/weather?units=${unit}&q=${uriEncodedCity}&appid=b616e8f9b0f5ea6e4561ed1d32ac9fc8`)\n       .then(response => response.json())\n       .then(response => {\n           setResponseObj(response)\n       })\n   }\n\n   return (\n       <div style={Theme} >\n           <h2>Find Current Weather Conditions</h2>\n            <form onSubmit={getForecast}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter City\"\n                    maxLength=\"50\"\n                    className={classes.TextInput}\n                    value={city}\n                    onChange={(e) => setCity(e.target.value)}\n                    />\n                <label className={classes.Radio}>\n                    <input\n                        type=\"radio\"\n                        name=\"units\"\n                        checked={unit === \"imperial\"}\n                        value=\"imperial\"\n                        onChange={(e) => setUnit(e.target.value)}\n                        />\n                    Fahrenheit\n                </label>\n                <label className={classes.Radio}>\n                    <input \n                        type=\"radio\"\n                        name=\"units\"\n                        checked={unit === \"metric\"}\n                        value=\"metric\"\n                        \n                        onChange={(e) => setUnit(e.target.value)}\n                        />\n                    Celcius\n                </label>\n\n                <button className={classes.Button} type=\"submit\">Get Forecast</button>\n\n            </form>\n            {/* {JSON.stringify(data)} */}\n           <Conditions\n               responseObj={responseObj}\n               />\n       </div>\n   )\n}\n\nexport default Forecast;\n\n\n\n\n\n\n\n\n\n// const [lat, setLat] = useState([]);\n//     const [long, setLong] = useState([]);\n//     const [data, setData] = useState([]);\n//     useEffect(() => {\n//         const fetchData =  () => {\n//           navigator.geolocation.getCurrentPosition(function(position) {\n//             setLat(position.coords.latitude);\n//             setLong(position.coords.longitude);\n//           });\n    \n//             fetch(`https://api.openweathermap.org/data/2.5/weather/?lat=${lat}&lon=${long}&units=${unit}&appid=b616e8f9b0f5ea6e4561ed1d32ac9fc8`)\n//             .then(res => res.json())\n//             .then(result => {\n//                 setData(result)\n//             });\n//             }\n//             fetchData();\n//         }, [lat,long])\n"]},"metadata":{},"sourceType":"module"}